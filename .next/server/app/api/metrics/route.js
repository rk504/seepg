"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/metrics/route";
exports.ids = ["app/api/metrics/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Freese%2Fcode%2Fseepg%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Freese%2Fcode%2Fseepg&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Freese%2Fcode%2Fseepg%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Freese%2Fcode%2Fseepg&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_reese_code_seepg_src_app_api_metrics_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/metrics/route.ts */ \"(rsc)/./src/app/api/metrics/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/metrics/route\",\n        pathname: \"/api/metrics\",\n        filename: \"route\",\n        bundlePath: \"app/api/metrics/route\"\n    },\n    resolvedPagePath: \"/Users/reese/code/seepg/src/app/api/metrics/route.ts\",\n    nextConfigOutput,\n    userland: _Users_reese_code_seepg_src_app_api_metrics_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/metrics/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtZXRyaWNzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZtZXRyaWNzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWV0cmljcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnJlZXNlJTJGY29kZSUyRnNlZXBnJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnJlZXNlJTJGY29kZSUyRnNlZXBnJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvbW8tY29kZS1pbnRlbGxpZ2VuY2UvPzI1YjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3JlZXNlL2NvZGUvc2VlcGcvc3JjL2FwcC9hcGkvbWV0cmljcy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbWV0cmljcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL21ldHJpY3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL21ldHJpY3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvcmVlc2UvY29kZS9zZWVwZy9zcmMvYXBwL2FwaS9tZXRyaWNzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9tZXRyaWNzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Freese%2Fcode%2Fseepg%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Freese%2Fcode%2Fseepg&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/metrics/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/metrics/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var _lib_metrics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/metrics */ \"(rsc)/./src/lib/metrics.ts\");\n/* harmony import */ var _lib_anomaly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/anomaly */ \"(rsc)/./src/lib/anomaly.ts\");\n\n\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const type = searchParams.get(\"type\");\n        const id = searchParams.get(\"id\");\n        const startDate = searchParams.get(\"startDate\");\n        const endDate = searchParams.get(\"endDate\");\n        const start = startDate ? new Date(startDate) : undefined;\n        const end = endDate ? new Date(endDate) : undefined;\n        switch(type){\n            case \"dashboard\":\n                const kpis = await (0,_lib_metrics__WEBPACK_IMPORTED_MODULE_2__.getDashboardKPIs)(start, end);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(kpis);\n            case \"code\":\n                if (!id) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Code ID required\"\n                    }, {\n                        status: 400\n                    });\n                }\n                const codeMetrics = await (0,_lib_metrics__WEBPACK_IMPORTED_MODULE_2__.calculateCodeMetrics)(id, start, end);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(codeMetrics);\n            case \"owner\":\n                if (!id) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Owner ID required\"\n                    }, {\n                        status: 400\n                    });\n                }\n                const ownerMetrics = await (0,_lib_metrics__WEBPACK_IMPORTED_MODULE_2__.calculateOwnerMetrics)(id, start, end);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(ownerMetrics);\n            case \"codes\":\n                const codes = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.db.codes.findMany();\n                const codesWithMetrics = await Promise.all(codes.map(async (code)=>{\n                    const metrics = await (0,_lib_metrics__WEBPACK_IMPORTED_MODULE_2__.calculateCodeMetrics)(code.id, start, end);\n                    return {\n                        ...code,\n                        metrics\n                    };\n                }));\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(codesWithMetrics);\n            case \"owners\":\n                const owners = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.db.owners.findMany();\n                const ownersWithMetrics = await Promise.all(owners.map(async (owner)=>{\n                    const metrics = await (0,_lib_metrics__WEBPACK_IMPORTED_MODULE_2__.calculateOwnerMetrics)(owner.id, start, end);\n                    return {\n                        ...owner,\n                        metrics\n                    };\n                }));\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(ownersWithMetrics);\n            case \"anomalies\":\n                const anomalies = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.db.anomalyFlags.findMany({\n                    isResolved: false,\n                    ...start && end ? {\n                        createdAt: {\n                            gte: start,\n                            lte: end\n                        }\n                    } : {}\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(anomalies);\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Invalid metrics type\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"Error fetching metrics:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { action } = await request.json();\n        switch(action){\n            case \"run_anomaly_detection\":\n                await (0,_lib_anomaly__WEBPACK_IMPORTED_MODULE_3__.runAnomalyDetection)();\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    message: \"Anomaly detection completed\"\n                });\n            case \"calculate_snapshots\":\n                // Calculate daily snapshots for all active codes\n                const activeCodes = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.db.codes.findManyActive();\n                const today = new Date();\n                const yesterday = new Date(today);\n                yesterday.setDate(yesterday.getDate() - 1);\n                for (const code of activeCodes){\n                    const metrics = await (0,_lib_metrics__WEBPACK_IMPORTED_MODULE_2__.calculateCodeMetrics)(code.id, yesterday, today);\n                    await _lib_db__WEBPACK_IMPORTED_MODULE_1__.db.metricsSnapshots.upsert({\n                        code_id: code.id,\n                        date: yesterday.toISOString().split(\"T\")[0],\n                        total_uses: metrics.totalUses,\n                        total_revenue: metrics.totalRevenue,\n                        total_discount: metrics.totalDiscount,\n                        new_customer_uses: metrics.newCustomerUses,\n                        new_customer_revenue: metrics.newCustomerRevenue,\n                        roi: metrics.roi,\n                        pvi: metrics.pvi,\n                        leakage: metrics.leakage\n                    });\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    message: \"Snapshots calculated successfully\"\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Invalid action\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"Error processing metrics action:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/metrics/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/anomaly.ts":
/*!****************************!*\
  !*** ./src/lib/anomaly.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectAnomalies: () => (/* binding */ detectAnomalies),\n/* harmony export */   detectLeakage: () => (/* binding */ detectLeakage),\n/* harmony export */   detectLowPVI: () => (/* binding */ detectLowPVI),\n/* harmony export */   detectRedemptionSpikes: () => (/* binding */ detectRedemptionSpikes),\n/* harmony export */   detectUnusualPatterns: () => (/* binding */ detectUnusualPatterns),\n/* harmony export */   runAnomalyDetection: () => (/* binding */ runAnomalyDetection)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/lib/db.ts\");\n\n/**\n * Detect redemption spikes using z-score analysis\n */ async function detectRedemptionSpikes(codeId, threshold = 2.5) {\n    const snapshots = await _db__WEBPACK_IMPORTED_MODULE_0__.db.metricsSnapshots.findMany({\n        codeId\n    });\n    if (snapshots.length < 7) return []; // Need at least a week of data\n    const uses = snapshots.map((s)=>s.total_uses);\n    const mean = uses.reduce((sum, use)=>sum + use, 0) / uses.length;\n    const variance = uses.reduce((sum, use)=>sum + Math.pow(use - mean, 2), 0) / uses.length;\n    const stdDev = Math.sqrt(variance);\n    if (stdDev === 0) return [];\n    const latestUses = uses[0];\n    const zScore = (latestUses - mean) / stdDev;\n    if (zScore > threshold) {\n        return [\n            {\n                codeId,\n                type: \"SPIKE_REDEMPTION\",\n                severity: zScore > 4 ? \"CRITICAL\" : zScore > 3 ? \"HIGH\" : \"MEDIUM\",\n                message: `Unusual spike in redemptions detected (${zScore.toFixed(2)}σ above mean)`,\n                metadata: {\n                    zScore: zScore,\n                    normalRate: mean,\n                    actualRate: latestUses,\n                    spikeFactor: latestUses / mean\n                }\n            }\n        ];\n    }\n    return [];\n}\n/**\n * Detect low PVI patterns\n */ async function detectLowPVI(codeId, threshold = 0.5, consecutiveDays = 3) {\n    const snapshots = await _db__WEBPACK_IMPORTED_MODULE_0__.db.metricsSnapshots.findMany({\n        codeId\n    });\n    if (snapshots.length < consecutiveDays) return [];\n    const lowPVIDays = snapshots.filter((s)=>s.pvi < threshold).length;\n    if (lowPVIDays >= consecutiveDays) {\n        const avgPVI = snapshots.reduce((sum, s)=>sum + Number(s.pvi), 0) / snapshots.length;\n        return [\n            {\n                codeId,\n                type: \"LOW_PVI\",\n                severity: avgPVI < 0.2 ? \"CRITICAL\" : avgPVI < 0.3 ? \"HIGH\" : \"MEDIUM\",\n                message: `PVI below threshold for ${consecutiveDays} consecutive days`,\n                metadata: {\n                    currentPVI: avgPVI,\n                    threshold,\n                    consecutiveDays\n                }\n            }\n        ];\n    }\n    return [];\n}\n/**\n * Detect leakage patterns\n */ async function detectLeakage(codeId, threshold = 0.7) {\n    const snapshots = await _db__WEBPACK_IMPORTED_MODULE_0__.db.metricsSnapshots.findMany({\n        codeId\n    });\n    if (snapshots.length < 3) return [];\n    const avgLeakage = snapshots.reduce((sum, s)=>sum + Number(s.leakage), 0) / snapshots.length;\n    if (avgLeakage > threshold) {\n        return [\n            {\n                codeId,\n                type: \"LEAKAGE_DETECTED\",\n                severity: avgLeakage > 0.9 ? \"CRITICAL\" : avgLeakage > 0.8 ? \"HIGH\" : \"MEDIUM\",\n                message: `High leakage rate detected - possible code sharing`,\n                metadata: {\n                    leakageRate: avgLeakage,\n                    threshold,\n                    totalUses: snapshots.reduce((sum, s)=>sum + s.total_uses, 0),\n                    newCustomerUses: snapshots.reduce((sum, s)=>sum + s.new_customer_uses, 0)\n                }\n            }\n        ];\n    }\n    return [];\n}\n/**\n * Detect unusual patterns (e.g., codes used outside normal hours, geographic anomalies)\n */ async function detectUnusualPatterns(codeId) {\n    const redemptions = await _db__WEBPACK_IMPORTED_MODULE_0__.db.codeRedemptions.findMany({\n        codeId\n    });\n    if (redemptions.length < 10) return [];\n    const results = [];\n    // Check for unusual time patterns (redemptions outside 9-5 business hours)\n    const businessHoursRedemptions = redemptions.filter((r)=>{\n        const hour = new Date(r.created_at).getHours();\n        return hour >= 9 && hour <= 17;\n    });\n    const businessHoursRatio = businessHoursRedemptions.length / redemptions.length;\n    if (businessHoursRatio < 0.3) {\n        results.push({\n            codeId,\n            type: \"UNUSUAL_PATTERN\",\n            severity: \"MEDIUM\",\n            message: \"Unusual redemption pattern - mostly outside business hours\",\n            metadata: {\n                businessHoursRatio,\n                totalRedemptions: redemptions.length,\n                businessHoursRedemptions: businessHoursRedemptions.length\n            }\n        });\n    }\n    // Check for rapid-fire redemptions (potential bot activity)\n    const rapidRedemptions = [];\n    for(let i = 1; i < redemptions.length; i++){\n        const timeDiff = new Date(redemptions[i - 1].created_at).getTime() - new Date(redemptions[i].created_at).getTime();\n        if (timeDiff < 60000) {\n            rapidRedemptions.push(i);\n        }\n    }\n    if (rapidRedemptions.length > 3) {\n        results.push({\n            codeId,\n            type: \"UNUSUAL_PATTERN\",\n            severity: \"HIGH\",\n            message: \"Rapid-fire redemptions detected - possible bot activity\",\n            metadata: {\n                rapidRedemptions: rapidRedemptions.length,\n                totalRedemptions: redemptions.length\n            }\n        });\n    }\n    return results;\n}\n/**\n * Run all anomaly detection algorithms for a code\n */ async function detectAnomalies(codeId) {\n    const results = await Promise.all([\n        detectRedemptionSpikes(codeId),\n        detectLowPVI(codeId),\n        detectLeakage(codeId),\n        detectUnusualPatterns(codeId)\n    ]);\n    return results.flat();\n}\n/**\n * Run anomaly detection for all active codes\n */ async function runAnomalyDetection() {\n    const activeCodes = await _db__WEBPACK_IMPORTED_MODULE_0__.db.codes.findManyActive();\n    for (const code of activeCodes){\n        const anomalies = await detectAnomalies(code.id);\n        for (const anomaly of anomalies){\n            await _db__WEBPACK_IMPORTED_MODULE_0__.db.anomalyFlags.create({\n                code_id: anomaly.codeId,\n                type: anomaly.type,\n                severity: anomaly.severity,\n                message: anomaly.message,\n                metadata: anomaly.metadata\n            });\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/anomaly.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\n// Database operations using Supabase client\nconst db = {\n    // Customers\n    customers: {\n        async findUnique (where) {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"customers\").select(\"*\").eq(\"email\", where.email).single();\n            if (error && error.code !== \"PGRST116\") throw error;\n            return data;\n        },\n        async create (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"customers\").insert(data).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async update (where, data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"customers\").update(data).eq(\"id\", where.id).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findMany () {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"customers\").select(\"*\");\n            if (error) throw error;\n            return data || [];\n        }\n    },\n    // Owners\n    owners: {\n        async findMany () {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"owners\").select(\"*\");\n            if (error) throw error;\n            return data || [];\n        },\n        async create (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"owners\").insert(data).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findUnique (where) {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"owners\").select(`\n          *,\n          codes!inner (\n            *,\n            code_redemptions!inner (\n              *,\n              orders!inner (\n                *,\n                customers!inner (*)\n              )\n            )\n          )\n        `).eq(\"id\", where.id).single();\n            if (error && error.code !== \"PGRST116\") throw error;\n            return data;\n        }\n    },\n    // Codes\n    codes: {\n        async findMany () {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"codes\").select(`\n          *,\n          owners!inner (*),\n          code_redemptions!inner (\n            *,\n            orders!inner (\n              *,\n              customers!inner (*)\n            )\n          )\n        `);\n            if (error) throw error;\n            return data || [];\n        },\n        async findUnique (where) {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"codes\").select(`\n          *,\n          owners!inner (*)\n        `).eq(\"code\", where.code).single();\n            if (error && error.code !== \"PGRST116\") throw error;\n            return data;\n        },\n        async create (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"codes\").insert(data).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findManyActive () {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"codes\").select(\"id\").eq(\"is_active\", true);\n            if (error) throw error;\n            return data || [];\n        }\n    },\n    // Orders\n    orders: {\n        async findUnique (where) {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").select(\"*\").eq(\"external_id\", where.externalId).single();\n            if (error && error.code !== \"PGRST116\") throw error;\n            return data;\n        },\n        async create (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").insert(data).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findMany () {\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").select(`\n          *,\n          customers!inner (*),\n          code_redemptions!inner (\n            *,\n            codes!inner (\n              *,\n              owners!inner (*)\n            )\n          )\n        `).order(\"created_at\", {\n                ascending: false\n            });\n            if (error) throw error;\n            return data || [];\n        }\n    },\n    // Code Redemptions\n    codeRedemptions: {\n        async create (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"code_redemptions\").insert(data).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findMany (where) {\n            let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"code_redemptions\").select(`\n          *,\n          orders!inner (\n            *,\n            customers!inner (*)\n          )\n        `);\n            if (where.codeId) {\n                query = query.eq(\"code_id\", where.codeId);\n            }\n            if (where.createdAt) {\n                if (where.createdAt.gte) {\n                    query = query.gte(\"created_at\", where.createdAt.gte.toISOString());\n                }\n                if (where.createdAt.lte) {\n                    query = query.lte(\"created_at\", where.createdAt.lte.toISOString());\n                }\n            }\n            const { data, error } = await query;\n            if (error) throw error;\n            return data || [];\n        }\n    },\n    // Metrics Snapshots\n    metricsSnapshots: {\n        async upsert (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"metrics_snapshots\").upsert(data, {\n                onConflict: \"code_id,date\",\n                ignoreDuplicates: false\n            }).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findMany (where) {\n            let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"metrics_snapshots\").select(\"*\").order(\"date\", {\n                ascending: false\n            });\n            if (where.codeId) {\n                query = query.eq(\"code_id\", where.codeId);\n            }\n            const { data, error } = await query;\n            if (error) throw error;\n            return data || [];\n        }\n    },\n    // Anomaly Flags\n    anomalyFlags: {\n        async create (data) {\n            const { data: result, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"anomaly_flags\").insert(data).select().single();\n            if (error) throw error;\n            return result;\n        },\n        async findMany (where) {\n            let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"anomaly_flags\").select(`\n          *,\n          codes!inner (\n            *,\n            owners!inner (*)\n          )\n        `).order(\"created_at\", {\n                ascending: false\n            });\n            if (where.isResolved !== undefined) {\n                query = query.eq(\"is_resolved\", where.isResolved);\n            }\n            if (where.createdAt) {\n                if (where.createdAt.gte) {\n                    query = query.gte(\"created_at\", where.createdAt.gte.toISOString());\n                }\n                if (where.createdAt.lte) {\n                    query = query.lte(\"created_at\", where.createdAt.lte.toISOString());\n                }\n            }\n            const { data, error } = await query;\n            if (error) throw error;\n            return data || [];\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/metrics.ts":
/*!****************************!*\
  !*** ./src/lib/metrics.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GA4EventSchema: () => (/* binding */ GA4EventSchema),\n/* harmony export */   ShopifyOrderSchema: () => (/* binding */ ShopifyOrderSchema),\n/* harmony export */   calculateCodeMetrics: () => (/* binding */ calculateCodeMetrics),\n/* harmony export */   calculateLeakage: () => (/* binding */ calculateLeakage),\n/* harmony export */   calculateOwnerMetrics: () => (/* binding */ calculateOwnerMetrics),\n/* harmony export */   calculatePVI: () => (/* binding */ calculatePVI),\n/* harmony export */   calculateROI: () => (/* binding */ calculateROI),\n/* harmony export */   getDashboardKPIs: () => (/* binding */ getDashboardKPIs),\n/* harmony export */   isNewCustomer: () => (/* binding */ isNewCustomer)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/dist/esm/index.js\");\n\n\n/**\n * Calculate Promo ROI: Revenue from discounted orders ÷ Total discount value\n */ function calculateROI(revenue, discountValue) {\n    if (discountValue === 0) return 0;\n    return revenue / discountValue;\n}\n/**\n * Calculate PVI (Promotional Value Index): Incremental Revenue ÷ Promo Spend\n * MVP approximation: New customer revenue ÷ (discount value + budget allocation)\n */ function calculatePVI(newCustomerRevenue, discountValue, budgetAllocation = 0) {\n    const promoSpend = discountValue + budgetAllocation;\n    if (promoSpend === 0) return 0;\n    return newCustomerRevenue / promoSpend;\n}\n/**\n * Calculate leakage: Percentage of redemptions that don't drive new customers\n */ function calculateLeakage(totalUses, newCustomerUses) {\n    if (totalUses === 0) return 0;\n    return Math.max(0, 1 - newCustomerUses / totalUses);\n}\n/**\n * Determine if a customer is new based on order date vs first order date\n */ function isNewCustomer(orderDate, firstOrderDate) {\n    const timeDiff = orderDate.getTime() - firstOrderDate.getTime();\n    const daysDiff = timeDiff / (1000 * 3600 * 24);\n    return daysDiff <= 1; // Within 1 day of first order\n}\n/**\n * Calculate metrics for a specific code\n */ async function calculateCodeMetrics(codeId, startDate, endDate) {\n    try {\n        const whereClause = {\n            codeId\n        };\n        if (startDate || endDate) {\n            whereClause.createdAt = {};\n            if (startDate) whereClause.createdAt.gte = startDate;\n            if (endDate) whereClause.createdAt.lte = endDate;\n        }\n        const redemptions = await _db__WEBPACK_IMPORTED_MODULE_0__.db.codeRedemptions.findMany(whereClause);\n        const totalUses = redemptions.length;\n        const totalRevenue = redemptions.reduce((sum, r)=>sum + Number(r.orders?.total || 0), 0);\n        const totalDiscount = redemptions.reduce((sum, r)=>sum + Number(r.orders?.discount_value || 0), 0);\n        // Calculate new customer metrics\n        const newCustomerRedemptions = redemptions.filter((r)=>r.orders?.customers && isNewCustomer(new Date(r.orders.created_at), new Date(r.orders.customers.first_order_at)));\n        const newCustomerUses = newCustomerRedemptions.length;\n        const newCustomerRevenue = newCustomerRedemptions.reduce((sum, r)=>sum + Number(r.orders?.total || 0), 0);\n        const roi = calculateROI(totalRevenue, totalDiscount);\n        const pvi = calculatePVI(newCustomerRevenue, totalDiscount);\n        const leakage = calculateLeakage(totalUses, newCustomerUses);\n        return {\n            codeId,\n            totalUses,\n            totalRevenue,\n            totalDiscount,\n            newCustomerUses,\n            newCustomerRevenue,\n            roi,\n            pvi,\n            leakage\n        };\n    } catch (error) {\n        console.error(\"Error calculating code metrics:\", error);\n        return {\n            codeId,\n            totalUses: 0,\n            totalRevenue: 0,\n            totalDiscount: 0,\n            newCustomerUses: 0,\n            newCustomerRevenue: 0,\n            roi: 0,\n            pvi: 0,\n            leakage: 0\n        };\n    }\n}\n/**\n * Calculate metrics for an owner (influencer/rep/campaign)\n */ async function calculateOwnerMetrics(ownerId, startDate, endDate) {\n    const owner = await _db__WEBPACK_IMPORTED_MODULE_0__.db.owners.findUnique({\n        id: ownerId\n    });\n    if (!owner) {\n        throw new Error(`Owner ${ownerId} not found`);\n    }\n    // Get all codes for this owner\n    const allCodes = await _db__WEBPACK_IMPORTED_MODULE_0__.db.codes.findMany();\n    const ownerCodes = allCodes.filter((code)=>code.owner_id === ownerId);\n    // Get all redemptions for these codes\n    let allRedemptions = [];\n    for (const code of ownerCodes){\n        const redemptions = await _db__WEBPACK_IMPORTED_MODULE_0__.db.codeRedemptions.findMany({\n            codeId: code.id\n        });\n        allRedemptions = allRedemptions.concat(redemptions);\n    }\n    // Filter by date range if provided\n    if (startDate || endDate) {\n        allRedemptions = allRedemptions.filter((r)=>{\n            const createdAt = new Date(r.created_at);\n            if (startDate && createdAt < startDate) return false;\n            if (endDate && createdAt > endDate) return false;\n            return true;\n        });\n    }\n    const totalCodes = ownerCodes.length;\n    const totalUses = allRedemptions.length;\n    const totalRevenue = allRedemptions.reduce((sum, r)=>sum + Number(r.orders?.total || 0), 0);\n    const newCustomerUses = allRedemptions.filter((r)=>r.orders?.customers && isNewCustomer(new Date(r.orders.created_at), new Date(r.orders.customers.first_order_at))).length;\n    // Calculate average PVI and ROI across all codes\n    const codeMetrics = await Promise.all(ownerCodes.map((code)=>calculateCodeMetrics(code.id, startDate, endDate)));\n    const avgPvi = codeMetrics.length > 0 ? codeMetrics.reduce((sum, m)=>sum + m.pvi, 0) / codeMetrics.length : 0;\n    const avgRoi = codeMetrics.length > 0 ? codeMetrics.reduce((sum, m)=>sum + m.roi, 0) / codeMetrics.length : 0;\n    return {\n        ownerId: owner.id,\n        ownerName: owner.name,\n        ownerType: owner.type,\n        totalCodes,\n        totalUses,\n        totalRevenue,\n        newCustomerUses,\n        avgPvi,\n        avgRoi\n    };\n}\n/**\n * Get dashboard KPIs\n */ async function getDashboardKPIs(startDate, endDate) {\n    try {\n        const whereClause = {};\n        if (startDate || endDate) {\n            whereClause.createdAt = {};\n            if (startDate) whereClause.createdAt.gte = startDate;\n            if (endDate) whereClause.createdAt.lte = endDate;\n        }\n        const redemptions = await _db__WEBPACK_IMPORTED_MODULE_0__.db.codeRedemptions.findMany(whereClause);\n        const totalPromoSpend = redemptions.reduce((sum, r)=>sum + Number(r.orders?.discount_value || 0), 0);\n        const totalRevenue = redemptions.reduce((sum, r)=>sum + Number(r.orders?.total || 0), 0);\n        const newCustomerRedemptions = redemptions.filter((r)=>r.orders?.customers && isNewCustomer(new Date(r.orders.created_at), new Date(r.orders.customers.first_order_at)));\n        const incrementalRevenue = newCustomerRedemptions.reduce((sum, r)=>sum + Number(r.orders?.total || 0), 0);\n        const avgPvi = totalPromoSpend > 0 ? incrementalRevenue / totalPromoSpend : 0;\n        const leakage = redemptions.length > 0 ? Math.max(0, 1 - newCustomerRedemptions.length / redemptions.length) : 0;\n        return {\n            totalPromoSpend,\n            incrementalRevenue,\n            avgPvi,\n            leakage: leakage * 100,\n            totalRedemptions: redemptions.length,\n            newCustomerRedemptions: newCustomerRedemptions.length\n        };\n    } catch (error) {\n        console.error(\"Error fetching dashboard KPIs:\", error);\n        // Return default values when database is not available\n        return {\n            totalPromoSpend: 0,\n            incrementalRevenue: 0,\n            avgPvi: 0,\n            leakage: 0,\n            totalRedemptions: 0,\n            newCustomerRedemptions: 0\n        };\n    }\n}\n// Validation schemas\nconst ShopifyOrderSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_1__.z.number(),\n    email: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().email(),\n    total_price: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().transform(Number),\n    discount_codes: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        code: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n        amount: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().transform(Number)\n    })).optional(),\n    created_at: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().transform((d)=>new Date(d)),\n    customer: zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        id: zod__WEBPACK_IMPORTED_MODULE_1__.z.number(),\n        email: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().email(),\n        first_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        last_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n        created_at: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().transform((d)=>new Date(d))\n    }),\n    source_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional()\n});\nconst GA4EventSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    event_name: zod__WEBPACK_IMPORTED_MODULE_1__.z.literal(\"purchase\"),\n    event_timestamp: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().transform((t)=>new Date(parseInt(t) / 1000)),\n    user_pseudo_id: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n    event_params: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n        key: zod__WEBPACK_IMPORTED_MODULE_1__.z.string(),\n        value: zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n            string_value: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n            double_value: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().optional()\n        })\n    }))\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/metrics.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseTyped: () => (/* binding */ supabaseTyped)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst supabaseAnonKey = process.env.SUPABASE_ANON_KEY;\nif (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error(\"Missing Supabase environment variables\");\n}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\nconst supabaseTyped = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/zod","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Freese%2Fcode%2Fseepg%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Freese%2Fcode%2Fseepg&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();